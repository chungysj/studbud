var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
class Navigation {
  constructor(links, pages) {
    this.links = links;
    this.pages = pages;
    this.currentPage = null;
  }
  getLinks() {
    console.log(this.links);
  }
  setPage(pageId) {
    this.currentPage = pageId;
    console.log(this.currentPage);
    // make sure that when the user clicks on a link that the active class link chagnes from whats is currently on to the link they click on
    // going to do this by looping through all the links and setting them to remove the active class, giving us a blanl slate to then check for which ever link the user clicks on, and add the active class to only to that link
    // new syntax, for being able to run a function on the result of each of every iterations of each loop
    // the syntax name is the name of the variable we want to return. - in this case its going to be a single link
    // then use a thing called the arrow operator this is going to be  a =sign followed by a greater than sign , then have our function brackets
    this.links.forEach(link => {
      link.classList.remove('active');
      if (this.getHash(link) === pageId) {
        link.classList.add('active');
      }
    });
  }
  /*extract the href attribute from that link and setting them to remove*/
  getHash(link) {
    return link.href.split("#")[1];
  }
}
exports.default = Navigation;
